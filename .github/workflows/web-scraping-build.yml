name: web-scraping-build

on:
  push:
    branches:
      - 'release/**'
      - 'develop'
      - 'feature/**'
    paths:
      # if web-scraping file not changed, do not trigger build job.
      - 'web-scraping/**'
      - '.github/workflows/web-scraping-*.yml'

env:
  GCP_PROJECT_ID: ${{secrets.GCP_PROJECT_ID}}
  IMAGE_NAME: ${{secrets.GAR_HOSTNAME}}/${{secrets.GCP_PROJECT_ID}}/rent-picker/web-scraping

jobs:
  build:
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout the repository
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        id: "auth"
        name: 'Authenticate to Google Cloud'
        uses: "google-github-actions/auth@v0"
        with:
          workload_identity_provider: ${{secrets.GCP_WORKLOAD_IDENTITY_PROVIDER}}
          service_account: ${{secrets.GCP_SERVICE_ACCOUNT}}
      -
        name: Configure docker to use the gcloud cli for Artifact Registry
        run: gcloud auth configure-docker ${{secrets.GAR_HOSTNAME}}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: web-scraping
          file: web-scraping/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:debug-bullseye-slim-${{github.sha}}
            ${{ env.IMAGE_NAME }}:debug-bullseye-slim
            ${{ env.IMAGE_NAME }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      -
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
